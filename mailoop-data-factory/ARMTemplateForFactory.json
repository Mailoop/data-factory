{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "mailoop-data-factory"
		},
		"dalkia_relationnal_db_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'dalkia_relationnal_db'"
		},
		"dalkia_relationnal_db_V2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'dalkia_relationnal_db_V2'"
		},
		"data_factory_results_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'data_factory_results'"
		},
		"paris_la_defense_master_db_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'paris_la_defense_master_db'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/dalkia_full_collect')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "extract_emails_from_dbb",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "public.emails"
							},
							{
								"name": "Destination",
								"value": "data-extract//emails"
							}
						],
						"typeProperties": {
							"source": {
								"type": "PostgreSqlSource"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "dalkia_emails",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "emailsExtract",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "extract_email_recipients_from_db",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "extract_emails_from_dbb",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "public.email_recipients"
							},
							{
								"name": "Destination",
								"value": "data-extract//email_recipients.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "PostgreSqlSource"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false
						},
						"inputs": [
							{
								"referenceName": "dalkia_emails_recipients",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "emailRecipientExtract",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dalkia_emails')]",
				"[concat(variables('factoryId'), '/datasets/emailsExtract')]",
				"[concat(variables('factoryId'), '/datasets/dalkia_emails_recipients')]",
				"[concat(variables('factoryId'), '/datasets/emailRecipientExtract')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Florian')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_factory_results",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "data-factory-results"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_factory_results')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Result_Agg')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_factory_results",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "data-factory-results"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_factory_results')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_y')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "paris_la_defense_master_db",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "PostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "public",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/paris_la_defense_master_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/byEmployeeResults')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_factory_results",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "by_employee",
						"container": "data-factory-results"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_factory_results')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/byWeekResults')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_factory_results",
					"type": "LinkedServiceReference"
				},
				"annotations": [
					"End_result"
				],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "byWeek",
						"container": "data-factory-results"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_factory_results')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dalkia_emails')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dalkia_relationnal_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "PostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "public",
					"table": "emails"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dalkia_relationnal_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dalkia_emails_recipients')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dalkia_relationnal_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "PostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "public",
					"table": "email_recipients"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dalkia_relationnal_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dalkia_relationnal_db')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dalkia_relationnal_db_V2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "PostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "public",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dalkia_relationnal_db_V2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/domainsExtracts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_factory_results",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "domains.csv",
						"container": "data-extract"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_factory_results')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/emailRecipientExtract')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_factory_results",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "email_recipients.csv",
						"container": "data-extract"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_factory_results')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/emailsExtract')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_factory_results",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "emails",
						"container": "data-extract"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "sender_id",
						"type": "String"
					},
					{
						"name": "parent_id",
						"type": "String"
					},
					{
						"name": "email_thread_id",
						"type": "String"
					},
					{
						"name": "subject",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "message_id",
						"type": "String"
					},
					{
						"name": "created_at",
						"type": "String"
					},
					{
						"name": "updated_at",
						"type": "String"
					},
					{
						"name": "mailbox_message_id",
						"type": "String"
					},
					{
						"name": "perimeter",
						"type": "String"
					},
					{
						"name": "is_answer",
						"type": "String"
					},
					{
						"name": "is_event_message",
						"type": "String"
					},
					{
						"name": "in_reply_to",
						"type": "String"
					},
					{
						"name": "time_zone",
						"type": "String"
					},
					{
						"name": "thread_subject",
						"type": "String"
					},
					{
						"name": "is_forwarded",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_factory_results')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/employeeExtract')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_factory_results",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "employees.csv",
						"container": "data-extract"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_factory_results')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/empoyeeWithDomains')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_factory_results",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "data-extract"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id\turl\tcompany_id\tcreated_at\tupdated_at",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_factory_results')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pldDomains')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "paris_la_defense_master_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "PostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "public",
					"table": "domains"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/paris_la_defense_master_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pldEmailRecipient')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "paris_la_defense_master_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "PostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "public",
					"table": "email_recipients"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/paris_la_defense_master_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pldEmails')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "paris_la_defense_master_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "PostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "public",
					"table": "emails"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/paris_la_defense_master_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pldEmployees')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "paris_la_defense_master_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "PostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "public",
					"table": "employees"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/paris_la_defense_master_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dalkia_relationnal_db')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "postgres://ufhernd9ito7ha:p61320870ee4e3eb7f2c34e6a91f8ab6e568cca34ef821980304564d64fc1ae7b@ec2-63-32-33-178.eu-west-1.compute.amazonaws.com:5432/dd5cdiais9tqlj",
				"annotations": [],
				"type": "PostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('dalkia_relationnal_db_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dalkia_relationnal_db_V2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "PostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('dalkia_relationnal_db_V2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/data_factory_results')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('data_factory_results_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/paris_la_defense_master_db')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "PostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('paris_la_defense_master_db_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/JoinEmployeesWithDomains')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "employeeExtract",
								"type": "DatasetReference"
							},
							"name": "RawEmployees"
						},
						{
							"dataset": {
								"referenceName": "domainsExtracts",
								"type": "DatasetReference"
							},
							"name": "RawDomains"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "empoyeeWithDomains",
								"type": "DatasetReference"
							},
							"name": "employeeWithDomains"
						}
					],
					"transformations": [
						{
							"name": "Employee",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "employeesWithSelect"
						},
						{
							"name": "Domains",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "domainsWithSelect"
						},
						{
							"name": "JoinEmployeeWithDomain"
						}
					],
					"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> RawEmployees\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> RawDomains\nRawEmployees derive(emp_id = toString(byName('id')),\n\t\temp_email_address = toString(byName('email_address')),\n\t\temp_exit_date = toString(byName('exit_date')),\n\t\temp_active = toString(byName('active')),\n\t\temp_domain_id = toString(byName('domain_id')),\n\t\temp_user_id = toString(byName('user_id')),\n\t\temp_created_at = toString(byName('created_at')),\n\t\temp_updated_at = toString(byName('updated_at')),\n\t\temp_mailbox_user_id = toString(byName('mailbox_user_id')),\n\t\temp_last_call_success = toString(byName('last_call_success')),\n\t\temp_time_zone = toString(byName('time_zone')),\n\t\temp_locale = toString(byName('locale')),\n\t\temp_admin = toString(byName('admin')),\n\t\temp_is_list = toString(byName('is_list')),\n\t\temp_entry_date = toString(byName('entry_date')),\n\t\temp_user_unique_id = toString(byName('user_unique_id')),\n\t\temp_parent_id = toString(byName('parent_id')),\n\t\temp_country = toString(byName('country')),\n\t\temp_language = toString(byName('language')),\n\t\temp_encrypted_email_address = toString(byName('encrypted_email_address')),\n\t\temp_working_time = toString(byName('working_time')),\n\t\temp_is_api_available = toString(byName('is_api_available')),\n\t\temp_behaviors_group_id = toString(byName('behaviors_group_id')),\n\t\temp_analytics_end_date = toString(byName('analytics_end_date')),\n\t\temp_analytics_start_date = toString(byName('analytics_start_date')),\n\t\temp_analytics_data_extraction_done = toString(byName('analytics_data_extraction_done')),\n\t\temp_smart_deconnexion_country_code = toString(byName('smart_deconnexion_country_code')),\n\t\temp_force_unactive = toString(byName('force_unactive')),\n\t\temp_data_extracted_until = toString(byName('data_extracted_until')),\n\t\temp_directory_type = toString(byName('directory_type')),\n\t\temp_is_directory_ressource_account = toString(byName('is_directory_ressource_account'))) ~> Employee\nEmployee select(mapColumn(\n\t\temp_id,\n\t\temp_email_address,\n\t\temp_exit_date,\n\t\temp_active,\n\t\temp_domain_id,\n\t\temp_user_id,\n\t\temp_created_at,\n\t\temp_updated_at,\n\t\temp_mailbox_user_id,\n\t\temp_last_call_success,\n\t\temp_time_zone,\n\t\temp_locale,\n\t\temp_admin,\n\t\temp_is_list,\n\t\temp_entry_date,\n\t\temp_user_unique_id,\n\t\temp_parent_id,\n\t\temp_country,\n\t\temp_language,\n\t\temp_encrypted_email_address,\n\t\temp_working_time,\n\t\temp_is_api_available,\n\t\temp_behaviors_group_id,\n\t\temp_analytics_end_date,\n\t\temp_analytics_start_date,\n\t\temp_analytics_data_extraction_done,\n\t\temp_smart_deconnexion_country_code,\n\t\temp_force_unactive,\n\t\temp_data_extracted_until,\n\t\temp_directory_type,\n\t\temp_is_directory_ressource_account\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> employeesWithSelect\nRawDomains derive(dom_id = toString(byName('id')),\n\t\tdom_url = toString(byName('url')),\n\t\tdom_company_id = toString(byName('company_id'))) ~> Domains\nDomains select(mapColumn(\n\t\tdom_id,\n\t\tdom_url,\n\t\tdom_company_id\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> domainsWithSelect\nemployeesWithSelect, domainsWithSelect join(emp_domain_id == dom_id,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinEmployeeWithDomain\nJoinEmployeeWithDomain sink(input(\n\t\t{id\turl\tcompany_id\tcreated_at\tupdated_at} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> employeeWithDomains"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/employeeExtract')]",
				"[concat(variables('factoryId'), '/datasets/domainsExtracts')]",
				"[concat(variables('factoryId'), '/datasets/empoyeeWithDomains')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/main')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "emailRecipientExtract",
								"type": "DatasetReference"
							},
							"name": "RawEmailRecipient"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "byEmployeeResults",
								"type": "DatasetReference"
							},
							"name": "byRecipientSink"
						}
					],
					"transformations": [
						{
							"name": "mappedEmailRecipients",
							"description": "Creates an explicit mapping for each drifted column"
						}
					],
					"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> RawEmailRecipient\nRawEmailRecipient derive(er_id = toString(byName('id')),\n\t\ter_recipient_id = toString(byName('recipient_id')),\n\t\ter_email_id = toString(byName('email_id')),\n\t\ter_status = toString(byName('status')),\n\t\ter_created_at = toString(byName('updated_at')),\n\t\ter_updated_at = toString(byName('updated_at')),\n\t\ter_through_list = toString(byName('through_list')),\n\t\ter_read_delay = toString(byName('read_delay')),\n\t\ter_mailbox_message_id = toString(byName('mailbox_message_id')),\n\t\ter_is_read = toString(byName('is_read')),\n\t\ter_read_time = toString(byName('read_time')),\n\t\ter_delivered_date = toString(byName('delivered_date'))) ~> mappedEmailRecipients\nmappedEmailRecipients sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\ttruncate: true) ~> byRecipientSink"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/emailRecipientExtract')]",
				"[concat(variables('factoryId'), '/datasets/byEmployeeResults')]"
			]
		}
	]
}