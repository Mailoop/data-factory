{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "mailoop-data-factory"
		},
		"HttpServer1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'HttpServer1'"
		},
		"data_factory_results_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'data_factory_results'"
		},
		"paris_la_defense_master_db_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'paris_la_defense_master_db'"
		},
		"HttpServer1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://app.mailoop.com"
		},
		"HttpServer1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sdqsd"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Basic",
					"userName": "[parameters('HttpServer1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('HttpServer1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/data_factory_results')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('data_factory_results_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/paris_la_defense_master_db')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "PostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('paris_la_defense_master_db_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_y')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "paris_la_defense_master_db",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "PostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "public",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/paris_la_defense_master_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataFactoryResults')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_factory_results",
					"type": "LinkedServiceReference"
				},
				"annotations": [
					"End_result"
				],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "data-factory-results"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_factory_results')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/domainsExtracts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_factory_results",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "domains.csv",
						"container": "data-extract"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_factory_results')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/emailRecipientExtract')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_factory_results",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "email_recipients.csv",
						"container": "data-extract"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_factory_results')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/emailsExtract')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_factory_results",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "emails",
						"container": "data-extract"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_factory_results')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/employeeExtract')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_factory_results",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "employees.csv",
						"container": "data-extract"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_factory_results')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/empoyeeWithDomains')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_factory_results",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "data-extract"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id\turl\tcompany_id\tcreated_at\tupdated_at",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_factory_results')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pldDomains')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "paris_la_defense_master_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "PostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "public",
					"table": "domains"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/paris_la_defense_master_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pldEmailRecipient')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "paris_la_defense_master_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "PostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "public",
					"table": "email_recipients"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/paris_la_defense_master_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pldEmails')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "paris_la_defense_master_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "PostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "public",
					"table": "emails"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/paris_la_defense_master_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pldEmployees')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "paris_la_defense_master_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "PostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "public",
					"table": "employees"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/paris_la_defense_master_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CollectDomains')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_Domains",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "public.emails"
							},
							{
								"name": "Destination",
								"value": "data-extract//emails"
							}
						],
						"typeProperties": {
							"source": {
								"type": "PostgreSqlSource"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "pldDomains",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "domainsExtracts",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/pldDomains')]",
				"[concat(variables('factoryId'), '/datasets/domainsExtracts')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CollectEmails')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_0td",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "public.emails"
							},
							{
								"name": "Destination",
								"value": "data-extract//emails"
							}
						],
						"typeProperties": {
							"source": {
								"type": "PostgreSqlSource"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "pldEmails",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "emailsExtract",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/pldEmails')]",
				"[concat(variables('factoryId'), '/datasets/emailsExtract')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CollectEmployee')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_Employees",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "public.emails"
							},
							{
								"name": "Destination",
								"value": "data-extract//emails"
							}
						],
						"typeProperties": {
							"source": {
								"type": "PostgreSqlSource"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "pldEmployees",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "employeeExtract",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/pldEmployees')]",
				"[concat(variables('factoryId'), '/datasets/employeeExtract')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyEmailRecipients')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copyEmailRecipient",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "public.email_recipients"
							},
							{
								"name": "Destination",
								"value": "data-extract//email_recipients.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "PostgreSqlSource"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false
						},
						"inputs": [
							{
								"referenceName": "pldEmailRecipient",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "emailRecipientExtract",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/pldEmailRecipient')]",
				"[concat(variables('factoryId'), '/datasets/emailRecipientExtract')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JoinEmployeesWithDomains')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "employeeExtract",
								"type": "DatasetReference"
							},
							"name": "RawEmployees",
							"typeProperties": {}
						},
						{
							"dataset": {
								"referenceName": "domainsExtracts",
								"type": "DatasetReference"
							},
							"name": "RawDomains",
							"typeProperties": {}
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "empoyeeWithDomains",
								"type": "DatasetReference"
							},
							"name": "employeeWithDomains"
						}
					],
					"transformations": [
						{
							"name": "Employee",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "employeesWithSelect"
						},
						{
							"name": "Domains",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "domainsWithSelect"
						},
						{
							"name": "JoinEmployeeWithDomain"
						}
					],
					"script": "\n\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> RawEmployees\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> RawDomains\nRawEmployees derive(emp_id = toString(byName('id')),\n\t\temp_email_address = toString(byName('email_address')),\n\t\temp_exit_date = toString(byName('exit_date')),\n\t\temp_active = toString(byName('active')),\n\t\temp_domain_id = toString(byName('domain_id')),\n\t\temp_user_id = toString(byName('user_id')),\n\t\temp_created_at = toString(byName('created_at')),\n\t\temp_updated_at = toString(byName('updated_at')),\n\t\temp_mailbox_user_id = toString(byName('mailbox_user_id')),\n\t\temp_last_call_success = toString(byName('last_call_success')),\n\t\temp_time_zone = toString(byName('time_zone')),\n\t\temp_locale = toString(byName('locale')),\n\t\temp_admin = toString(byName('admin')),\n\t\temp_is_list = toString(byName('is_list')),\n\t\temp_entry_date = toString(byName('entry_date')),\n\t\temp_user_unique_id = toString(byName('user_unique_id')),\n\t\temp_parent_id = toString(byName('parent_id')),\n\t\temp_country = toString(byName('country')),\n\t\temp_language = toString(byName('language')),\n\t\temp_encrypted_email_address = toString(byName('encrypted_email_address')),\n\t\temp_working_time = toString(byName('working_time')),\n\t\temp_is_api_available = toString(byName('is_api_available')),\n\t\temp_behaviors_group_id = toString(byName('behaviors_group_id')),\n\t\temp_analytics_end_date = toString(byName('analytics_end_date')),\n\t\temp_analytics_start_date = toString(byName('analytics_start_date')),\n\t\temp_analytics_data_extraction_done = toString(byName('analytics_data_extraction_done')),\n\t\temp_smart_deconnexion_country_code = toString(byName('smart_deconnexion_country_code')),\n\t\temp_force_unactive = toString(byName('force_unactive')),\n\t\temp_data_extracted_until = toString(byName('data_extracted_until')),\n\t\temp_directory_type = toString(byName('directory_type')),\n\t\temp_is_directory_ressource_account = toString(byName('is_directory_ressource_account'))) ~> Employee\nEmployee select(mapColumn(\n\t\temp_id,\n\t\temp_email_address,\n\t\temp_exit_date,\n\t\temp_active,\n\t\temp_domain_id,\n\t\temp_user_id,\n\t\temp_created_at,\n\t\temp_updated_at,\n\t\temp_mailbox_user_id,\n\t\temp_last_call_success,\n\t\temp_time_zone,\n\t\temp_locale,\n\t\temp_admin,\n\t\temp_is_list,\n\t\temp_entry_date,\n\t\temp_user_unique_id,\n\t\temp_parent_id,\n\t\temp_country,\n\t\temp_language,\n\t\temp_encrypted_email_address,\n\t\temp_working_time,\n\t\temp_is_api_available,\n\t\temp_behaviors_group_id,\n\t\temp_analytics_end_date,\n\t\temp_analytics_start_date,\n\t\temp_analytics_data_extraction_done,\n\t\temp_smart_deconnexion_country_code,\n\t\temp_force_unactive,\n\t\temp_data_extracted_until,\n\t\temp_directory_type,\n\t\temp_is_directory_ressource_account\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> employeesWithSelect\nRawDomains derive(dom_id = toString(byName('id')),\n\t\tdom_url = toString(byName('url')),\n\t\tdom_company_id = toString(byName('company_id'))) ~> Domains\nDomains select(mapColumn(\n\t\tdom_id,\n\t\tdom_url,\n\t\tdom_company_id\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> domainsWithSelect\nemployeesWithSelect, domainsWithSelect join(emp_domain_id == dom_id,\n\tjoinType:'left',\n\tbroadcast: 'none')~> JoinEmployeeWithDomain\nJoinEmployeeWithDomain sink(input(\n\t\t{id\turl\tcompany_id\tcreated_at\tupdated_at} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> employeeWithDomains"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/employeeExtract')]",
				"[concat(variables('factoryId'), '/datasets/domainsExtracts')]",
				"[concat(variables('factoryId'), '/datasets/empoyeeWithDomains')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "emailRecipientExtract",
								"type": "DatasetReference"
							},
							"name": "RawEmailRecipient",
							"typeProperties": {}
						},
						{
							"dataset": {
								"referenceName": "emailsExtract",
								"type": "DatasetReference"
							},
							"name": "RawEmails",
							"typeProperties": {}
						},
						{
							"dataset": {
								"referenceName": "domainsExtracts",
								"type": "DatasetReference"
							},
							"name": "domains",
							"typeProperties": {}
						},
						{
							"dataset": {
								"referenceName": "employeeExtract",
								"type": "DatasetReference"
							},
							"name": "RawEmployee",
							"typeProperties": {}
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dataFactoryResults",
								"type": "DatasetReference"
							},
							"name": "Sink"
						}
					],
					"transformations": [
						{
							"name": "mappedEmailRecipients",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "mappedEmails",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "selectedEmailsRecipients"
						},
						{
							"name": "selectedsEmails"
						},
						{
							"name": "withYearWeek"
						},
						{
							"name": "MapDrifted1",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "MapDrifted2",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "selectEmployees"
						},
						{
							"name": "selectDomains"
						},
						{
							"name": "employeeWithDomains"
						},
						{
							"name": "emailRecipientWithRecipients"
						},
						{
							"name": "WithEmails"
						}
					],
					"script": "\n\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> RawEmailRecipient\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> RawEmails\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> domains\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> RawEmployee\nRawEmailRecipient derive(er_id = toString(byName('id')),\n\t\ter_recipient_id = toString(byName('recipient_id')),\n\t\ter_email_id = toString(byName('email_id')),\n\t\ter_status = toString(byName('status')),\n\t\ter_created_at = toString(byName('updated_at')),\n\t\ter_updated_at = toString(byName('updated_at')),\n\t\ter_through_list = toString(byName('through_list')),\n\t\ter_read_delay = toString(byName('read_delay')),\n\t\ter_mailbox_message_id = toString(byName('mailbox_message_id')),\n\t\ter_is_read = toString(byName('is_read')),\n\t\ter_read_time = toString(byName('read_time')),\n\t\ter_delivered_date = toString(byName('delivered_date'))) ~> mappedEmailRecipients\nRawEmails derive(em_id = toString(byName('id')),\n\t\tem_sender_id = toString(byName('sender_id')),\n\t\tem_parent_id = toString(byName('parent_id')),\n\t\tem_email_thread_id = toString(byName('email_thread_id')),\n\t\tem_subject = toString(byName('subject')),\n\t\tem_date = toString(byName('date')),\n\t\tem_message_id = toString(byName('message_id')),\n\t\tem_created_at = toString(byName('created_at')),\n\t\tem_updated_at = toString(byName('updated_at')),\n\t\tem_mailbox_message_id = toString(byName('mailbox_message_id')),\n\t\tem_perimeter = toString(byName('perimeter')),\n\t\tem_is_answer = toString(byName('is_answer')),\n\t\tem_is_event_message = toString(byName('is_event_message')),\n\t\tem_in_reply_to = toString(byName('in_reply_to')),\n\t\tem_time_zone = toString(byName('time_zone')),\n\t\tem_thread_subject = toString(byName('thread_subject')),\n\t\tem_is_forwarded = toString(byName('is_forwarded'))) ~> mappedEmails\nmappedEmailRecipients select(mapColumn(\n\t\ter_id,\n\t\ter_recipient_id,\n\t\ter_email_id,\n\t\ter_status,\n\t\ter_created_at,\n\t\ter_updated_at,\n\t\ter_through_list,\n\t\ter_read_delay,\n\t\ter_mailbox_message_id,\n\t\ter_is_read,\n\t\ter_read_time,\n\t\ter_delivered_date\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> selectedEmailsRecipients\nmappedEmails select(mapColumn(\n\t\tem_id,\n\t\tem_sender_id,\n\t\tem_parent_id,\n\t\tem_email_thread_id,\n\t\tem_subject,\n\t\tem_date,\n\t\tem_message_id,\n\t\tem_created_at,\n\t\tem_updated_at,\n\t\tem_mailbox_message_id,\n\t\tem_perimeter,\n\t\tem_is_answer,\n\t\tem_is_event_message,\n\t\tem_in_reply_to,\n\t\tem_time_zone,\n\t\tem_thread_subject,\n\t\tem_is_forwarded\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> selectedsEmails\nWithEmails derive(yearWeek = concat(\n    toString(year(toTimestamp(em_date))),\n    '-',\n    toString(weekOfYear((toTimestamp(em_date))))\n)) ~> withYearWeek\nRawEmployee derive(emp_id = toString(byName('id')),\n\t\temp_email_address = toString(byName('email_address')),\n\t\temp_exit_date = toString(byName('exit_date')),\n\t\temp_active = toString(byName('active')),\n\t\temp_domain_id = toString(byName('domain_id')),\n\t\temp_user_id = toString(byName('user_id')),\n\t\temp_mailbox_user_id = toString(byName('mailbox_user_id')),\n\t\temp_last_call_success = toString(byName('last_call_success')),\n\t\temp_time_zone = toString(byName('time_zone')),\n\t\temp_locale = toString(byName('locale')),\n\t\temp_admin = toString(byName('admin')),\n\t\temp_is_list = toString(byName('is_list')),\n\t\temp_entry_date = toString(byName('entry_date')),\n\t\temp_user_unique_id = toString(byName('user_unique_id')),\n\t\temp_country = toString(byName('country')),\n\t\temp_language = toString(byName('language')),\n\t\temp_encrypted_email_address = toString(byName('encrypted_email_address')),\n\t\temp_analytics_end_date = toString(byName('analytics_end_date')),\n\t\temp_analytics_start_date = toString(byName('analytics_start_date')),\n\t\tdirectory_type = toString(byName('directory_type')),\n\t\temp_data_extracted_until = toString(byName('data_extracted_until')),\n\t\tis_directory_ressource_account = toString(byName('is_directory_ressource_account'))) ~> MapDrifted1\ndomains derive(dom_id = toString(byName('id')),\n\t\tdom_url = toString(byName('url')),\n\t\tdom_company_id = toString(byName('company_id'))) ~> MapDrifted2\nMapDrifted1 select(mapColumn(\n\t\temp_id,\n\t\temp_active,\n\t\temp_domain_id\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> selectEmployees\nMapDrifted2 select(mapColumn(\n\t\tdom_id,\n\t\tdom_url,\n\t\tdom_company_id\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> selectDomains\nselectEmployees, selectDomains join(emp_domain_id == dom_id,\n\tjoinType:'left',\n\tbroadcast: 'none')~> employeeWithDomains\nselectedEmailsRecipients, employeeWithDomains join(er_recipient_id == emp_id,\n\tjoinType:'left',\n\tbroadcast: 'none')~> emailRecipientWithRecipients\nemailRecipientWithRecipients, selectedsEmails join(er_email_id == em_id,\n\tjoinType:'left',\n\tbroadcast: 'none')~> WithEmails\nwithYearWeek sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\trowUrlColumn:'yearWeek',\n\ttruncate: true,\n\tmapColumn(\n\t\tem_id,\n\t\tem_sender_id,\n\t\tem_parent_id,\n\t\tem_email_thread_id,\n\t\tem_subject,\n\t\tem_date,\n\t\tem_message_id,\n\t\tem_created_at,\n\t\tem_updated_at,\n\t\tem_mailbox_message_id,\n\t\tem_perimeter,\n\t\tem_is_answer,\n\t\tem_is_event_message,\n\t\tem_in_reply_to,\n\t\tem_time_zone,\n\t\tem_thread_subject,\n\t\tem_is_forwarded,\n\t\ter_id,\n\t\ter_recipient_id,\n\t\ter_email_id,\n\t\ter_status,\n\t\ter_through_list,\n\t\ter_read_delay,\n\t\ter_mailbox_message_id,\n\t\ter_is_read,\n\t\ter_read_time,\n\t\ter_delivered_date,\n\t\tyearWeek\n\t)) ~> Sink"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/emailRecipientExtract')]",
				"[concat(variables('factoryId'), '/datasets/emailsExtract')]",
				"[concat(variables('factoryId'), '/datasets/domainsExtracts')]",
				"[concat(variables('factoryId'), '/datasets/employeeExtract')]",
				"[concat(variables('factoryId'), '/datasets/dataFactoryResults')]"
			]
		}
	]
}